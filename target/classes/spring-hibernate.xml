<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 自动扫描包(自动注入) -->
	<context:component-scan base-package="com.yzz.*" />

	<!-- 使用C3P0数据源，MySQL数据库 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- MySQL5 -->
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
	</bean>

	<!-- session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描hibernate注解配置的entity -->
		<property name="packagesToScan" value="com.yzz.entity" />
		
		<!-- <property name="mappingDirectoryLocations">
		     <list>
		         <value>classpath:/com/yzz/mapper/</value>
		     </list>
		</property> -->
		
		<!-- <property name="annotatedClasses">
			<list>
				<value>classpath:com.yzz.entity.*</value>
			</list>
		</property> -->
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		
		<!-- 把java 实体类属性的【骆驼命名】 转换成  表字段的【下划线命名】 -->
		<property name="namingStrategy" ref="namingStrategy" ></property>
	</bean>
	
	<bean id="namingStrategy" class="com.yzz.util.HibernateNamingStrategy"/>
	
	<!-- hibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>

	<!--事务，就是保证一系列业务逻辑全部执行或者全部不执行,spring aop要抛出RuntimeException异常才会回滚 -->
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置基于注解式的声明式事务@Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>